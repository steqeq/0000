parameters:
- name: checkoutRepo
  type: string
  default: 'self'
- name: checkoutRef
  type: string
  default: ''

jobs:
- job: rocprofiler_register
  variables:
  - group: common
  - template: /.azuredevops/variables-global.yml
  - name: system.debug
    value: 'true'
  pool:
    vmImage: ${{ variables.BASE_BUILD_POOL }}
  workspace:
    clean: all
  steps:
  # - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/preamble.yml
  # - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/checkout.yml
  #   parameters:
  #     checkoutRepo: ${{ parameters.checkoutRepo }}
  # - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/build-cmake.yml
  #   parameters:
  #     componentName: rocprofiler-register
  # - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/build-cmake.yml
  #   parameters:
  #     componentName: rocprofiler-register-tests
  #     extraBuildFlags: >-
  #       -DCMAKE_PREFIX_PATH=$(Build.BinariesDirectory)
  #     cmakeBuildDir: 'tests/build'
  #     installEnabled: false
  # - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/test.yml
  #   parameters:
  #     componentName: rocprofiler-register
  #     testDir: 'tests/build'
  # - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/artifact-upload.yml
  - task: Bash@3
    displayName: Create manifest
    inputs:
      targetType: 'inline'
      script: |
        cat <<EOF > $(Agent.BuildDirectory)/manifest.html
        <html>
        <table border="1">
        <tr>
          <th>Build.DefinitionName</th>
          <th>Build.Repository.Name</th>
          <th>Build.SourceBranch</th>
          <th>Build.SourceVersion</th>
          <th>Build.BuildId</th>
          <th>Build.BuildNumber</th>
        </tr>
        <tr>
          <td>$(Build.DefinitionName)</td>
          <td>$(Build.Repository.Name)</td>
          <td>$(Build.SourceBranch)</td>
          <td>$(Build.SourceVersion)</td>
          <td>$(Build.BuildId)</td>
          <td>$(Build.BuildNumber)</td>
        </tr>
        </table>
        </html>
        EOF
  - task: PublishHtmlReport@1
    displayName: 'Publish manifest'
    continueOnError: true
    inputs:
      tabName: html
      reportDir: $(Agent.BuildDirectory)/manifest.html
  - bash: |
      echo "Build.BuildId: $(Build.BuildId)"
      echo "Build.BuildNumber: $(Build.BuildNumber)"
      echo "Build.SourceBranch: $(Build.SourceBranch)"
      echo "Build.SourceBranchName: $(Build.SourceBranchName)"
      echo "Build.SourceVersion: $(Build.SourceVersion)"
      echo "Build.SourceVersionMessage: $(Build.SourceVersionMessage)"
      echo "Build.DefinitionName: $(Build.DefinitionName)"
      echo "Build.Repository.ID: $(Build.Repository.ID)"
      echo "Build.Repository.Name: $(Build.Repository.Name)"
      echo "System.DefinitionId: $(System.DefinitionId)"
