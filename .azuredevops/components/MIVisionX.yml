parameters:
- name: checkoutRepo
  type: string
  default: 'self'
- name: checkoutRef
  type: string
  default: ''
- name: aptPackages
  type: object
  default:
    - cmake
    - ninja-build
    - wget
    - unzip
    - libstdc++-12-dev
    - pkg-config
    - ffmpeg
    - libavcodec-dev
    - libavformat-dev
    - libavutil-dev
    - libswscale-dev
    - libgmp-dev
    - libomp-dev
    - libopencv-dev
    - protobuf-compiler
    - libprotoc-dev
- name: pipModules
  type: object
  default:
    - future==1.0.0
    - pytz==2022.1
    - numpy==1.23
    - google==3.0.0
    - protobuf==3.12.4
    - onnx==1.12.0
    - nnef==1.0.7
- name: rocmDependencies
  type: object
  default:
    - rocm-cmake
    - llvm-project
    - ROCR-Runtime
    - clr
    - rocminfo
    - rocprofiler-register
    - half
    - rocBLAS
    - MIOpen
    - AMDMIGraphX
    - rpp
    - rocDecode
- name: rocmTestDependencies
  type: object
  default:
    - clr
    - half
    - hipBLAS-common
    - hipBLASLt
    - llvm-project
    - MIOpen
    - rocBLAS
    - rocprofiler-register
    - ROCR-Runtime
    - roctracer
    - rpp

jobs:
- job: MIVisionX
  variables:
  - group: common
  - template: /.azuredevops/variables-global.yml
  pool:
    vmImage: ${{ variables.BASE_BUILD_POOL }}
  workspace:
    clean: all
  strategy:
    matrix:
      gfx942:
        JOB_GPU_TARGET: gfx942
  steps:
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/dependencies-other.yml
    parameters:
      aptPackages: ${{ parameters.aptPackages }}
      pipModules: ${{ parameters.pipModules }}
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/preamble.yml
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/checkout.yml
    parameters:
      checkoutRepo: ${{ parameters.checkoutRepo }}
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/dependencies-rocm.yml
    parameters:
      dependencyList: ${{ parameters.rocmDependencies }}
      gpuTarget: $(JOB_GPU_TARGET)
      # CI case: download latest default branch build
      ${{ if eq(parameters.checkoutRef, '') }}:
        dependencySource: staging
      # manual build case: triggered by ROCm/ROCm repo
      ${{ elseif ne(parameters.checkoutRef, '') }}:
        dependencySource: tag-builds
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/build-cmake.yml
    parameters:
      extraBuildFlags: >-
        -DCMAKE_BUILD_TYPE=Release
        -DROCM_PATH=$(Agent.BuildDirectory)/rocm
        -DROCM_DEP_ROCMCORE=ON
        -GNinja
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/artifact-upload.yml
    parameters:
      gpuTarget: $(JOB_GPU_TARGET)

- job: MIVisionX_testing
  dependsOn: MIVisionX
  condition: and(succeeded(), eq(variables.ENABLE_GFX942_TESTS, 'true'), not(containsValue(split(variables.DISABLED_GFX942_TESTS, ','), variables['Build.DefinitionName'])))
  variables:
  - group: common
  - template: /.azuredevops/variables-global.yml
  pool: $(JOB_TEST_POOL)
  workspace:
    clean: all
  strategy:
    matrix:
      gfx942:
        JOB_GPU_TARGET: gfx942
        JOB_TEST_POOL: ${{ variables.GFX942_TEST_POOL }}
  steps:
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/dependencies-other.yml
    parameters:
      aptPackages: ${{ parameters.aptPackages }}
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/preamble.yml
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/local-artifact-download.yml
    parameters:
      gpuTarget: $(JOB_GPU_TARGET)
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/dependencies-aqlprofile.yml
    parameters:
      ${{ if eq(parameters.checkoutRef, '') }}:
        dependencySource: staging
      ${{ elseif ne(parameters.checkoutRef, '') }}:
        dependencySource: tag-builds
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/dependencies-rocm.yml
    parameters:
      dependencyList: ${{ parameters.rocmTestDependencies }}
      gpuTarget: $(JOB_GPU_TARGET)
      ${{ if eq(parameters.checkoutRef, '') }}:
        dependencySource: staging
      ${{ elseif ne(parameters.checkoutRef, '') }}:
        dependencySource: tag-builds
  # anything in /opt may be persistent across runs
  # so we need to remove the symlink if it already exists
  - script: |
      sudo rm -f /opt/rocm
      sudo ln -s $(Agent.BuildDirectory)/rocm /opt/rocm
      mkdir mivisionx-tests
      cd mivisionx-tests
      cmake /opt/rocm/share/mivisionx/test
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/gpu-diagnostics.yml
  - template: ${{ variables.CI_TEMPLATE_PATH }}/steps/test.yml
    parameters:
      componentName: MIVisionX
      testDir: 'mivisionx-tests'
